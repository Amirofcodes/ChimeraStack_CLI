name: "React PHP Fullstack"
version: "1.0.0"
description: "Complete fullstack development environment with React frontend, PHP backend, and MySQL database"
type: "stack"

# Stack composition
components:
  welcome:
    source: "base/core/welcome"
    required: true

  backend:
    source: "base/backend/php"
    required: true

  database:
    source: "base/database/mysql" # Fullstack template uses MySQL by default
    required: true

  frontend:
    type: "frontend"
    framework: "react"
    required: true
    config:
      port_range: "3000-3999"
      env_prefix: "FRONTEND"
      dev_server:
        host: "0.0.0.0"
        port: "${FRONTEND_PORT}"

# Stack-specific configuration
stack:
  type: "fullstack"
  frontend:
    framework: "react"
    version: "18"
    dev_server: true
  backend:
    api_prefix: "/api"
    cors_origin: "http://localhost:${FRONTEND_PORT}"

# Tags for searching
tags:
  - react
  - php
  - mysql
  - fullstack
  - api
  - development

# Welcome page configuration
welcome_page:
  sections:
    - title: "Frontend (React)"
      service: "frontend"
      url: "http://localhost:${FRONTEND_PORT}"
      dev_server: true
    - title: "Backend API"
      service: "backend"
      url: "http://localhost:${WEB_PORT}/api"
    - title: "Database"
      service: "mysql"
      port: "${DB_PORT}"
      credentials:
        database: "${DB_DATABASE}"
        username: "${DB_USERNAME}"
        password: "${DB_PASSWORD}"
    - title: "phpMyAdmin"
      service: "phpmyadmin"
      url: "http://localhost:${ADMIN_PORT}"

# Additional services
services:
  phpmyadmin:
    type: "web"
    port_range: "8080-8099"
    required: false
    env_prefix: "ADMIN"
    depends_on: ["database"]
    image: "phpmyadmin/phpmyadmin"
    env:
      PMA_HOST: "db"
      PMA_PORT: "${DB_PORT}"

# Files to be generated/processed
files:
  - source: "docker-compose.yml"
    target: "docker-compose.yml"
  - source: ".env.example"
    target: ".env"
  - source: "frontend/.env.example"
    target: "frontend/.env"
  - source: "backend/.env.example"
    target: "backend/.env"

# Network configuration
network:
  name: "${PROJECT_NAME}_network"
  driver: "bridge"

# Post-creation hooks
post_create:
  - working_dir: "frontend"
    command: "npm install"
  - working_dir: "backend"
    command: "composer install"
  - working_dir: "backend"
    command: "php artisan key:generate"
